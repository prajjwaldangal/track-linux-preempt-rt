--- include/linux/preempt.h
+++ include/linux/preempt.h
@@ -172,53 +145,16 @@ do { \
 	barrier(); \
 } while (0)
 
-#define preempt_lazy_disable() \
-do { \
-	inc_preempt_lazy_count(); \
-	barrier(); \
-} while (0)
-
 #define sched_preempt_enable_no_resched() \
 do { \
 	barrier(); \
 	preempt_count_dec(); \
 } while (0)
 
-#ifdef CONFIG_PREEMPT_RT
-# define preempt_enable_no_resched() sched_preempt_enable_no_resched()
-# define preempt_check_resched_rt() preempt_check_resched()
-#else
-# define preempt_enable_no_resched() preempt_enable()
-# define preempt_check_resched_rt() barrier();
-#endif
+#define preempt_enable_no_resched() sched_preempt_enable_no_resched()
 
 #define preemptible()	(preempt_count() == 0 && !irqs_disabled())
 
-#if defined(CONFIG_SMP) && defined(CONFIG_PREEMPT_RT)
-
-extern void migrate_disable(void);
-extern void migrate_enable(void);
-
-int __migrate_disabled(struct task_struct *p);
-
-#elif !defined(CONFIG_SMP) && defined(CONFIG_PREEMPT_RT)
-
-extern void migrate_disable(void);
-extern void migrate_enable(void);
-static inline int __migrate_disabled(struct task_struct *p)
-{
-	return 0;
-}
-
-#else
-#define migrate_disable()		preempt_disable()
-#define migrate_enable()		preempt_enable()
-static inline int __migrate_disabled(struct task_struct *p)
-{
-	return 0;
-}
-#endif
-
 #ifdef CONFIG_PREEMPTION
 #define preempt_enable() \
 do { \
@@ -285,16 +208,8 @@ do { \
 #define preempt_disable_notrace()		barrier()
 #define preempt_enable_no_resched_notrace()	barrier()
 #define preempt_enable_notrace()		barrier()
-#define preempt_check_resched_rt()		barrier()
 #define preemptible()				0
 
-#define migrate_disable()			barrier()
-#define migrate_enable()			barrier()
-
-static inline int __migrate_disabled(struct task_struct *p)
-{
-	return 0;
-}
 #endif /* CONFIG_PREEMPT_COUNT */
 
 #ifdef MODULE

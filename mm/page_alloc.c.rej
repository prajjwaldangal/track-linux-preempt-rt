--- mm/page_alloc.c
+++ mm/page_alloc.c
@@ -2797,18 +2762,13 @@ void drain_zone_pages(struct zone *zone, struct per_cpu_pages *pcp)
 {
 	unsigned long flags;
 	int to_drain, batch;
-	LIST_HEAD(dst);
 
-	local_lock_irqsave(pa_lock, flags);
+	local_irq_save(flags);
 	batch = READ_ONCE(pcp->batch);
 	to_drain = min(pcp->count, batch);
 	if (to_drain > 0)
-		isolate_pcp_pages(to_drain, pcp, &dst);
-
-	local_unlock_irqrestore(pa_lock, flags);
-
-	if (to_drain > 0)
-		free_pcppages_bulk(zone, &dst, false);
+		free_pcppages_bulk(zone, to_drain, pcp);
+	local_irq_restore(flags);
 }
 #endif
 
@@ -2824,21 +2784,14 @@ static void drain_pages_zone(unsigned int cpu, struct zone *zone)
 	unsigned long flags;
 	struct per_cpu_pageset *pset;
 	struct per_cpu_pages *pcp;
-	LIST_HEAD(dst);
-	int count;
 
-	cpu_lock_irqsave(cpu, flags);
+	local_irq_save(flags);
 	pset = per_cpu_ptr(zone->pageset, cpu);
 
 	pcp = &pset->pcp;
-	count = pcp->count;
-	if (count)
-		isolate_pcp_pages(count, pcp, &dst);
-
-	cpu_unlock_irqrestore(cpu, flags);
-
-	if (count)
-		free_pcppages_bulk(zone, &dst, false);
+	if (pcp->count)
+		free_pcppages_bulk(zone, pcp->count, pcp);
+	local_irq_restore(flags);
 }
 
 /*
@@ -3077,17 +3028,13 @@ void free_unref_page(struct page *page)
 {
 	unsigned long flags;
 	unsigned long pfn = page_to_pfn(page);
-	struct zone *zone = page_zone(page);
-	LIST_HEAD(dst);
 
 	if (!free_unref_page_prepare(page, pfn))
 		return;
 
-	local_lock_irqsave(pa_lock, flags);
-	free_unref_page_commit(page, pfn, &dst);
-	local_unlock_irqrestore(pa_lock, flags);
-	if (!list_empty(&dst))
-		free_pcppages_bulk(zone, &dst, false);
+	local_irq_save(flags);
+	free_unref_page_commit(page, pfn);
+	local_irq_restore(flags);
 }
 
 /*
@@ -3107,42 +3049,25 @@ void free_unref_page_list(struct list_head *list)
 		set_page_private(page, pfn);
 	}
 
-	local_lock_irqsave(pa_lock, flags);
+	local_irq_save(flags);
 	list_for_each_entry_safe(page, next, list, lru) {
 		unsigned long pfn = page_private(page);
-		enum zone_type type;
 
 		set_page_private(page, 0);
 		trace_mm_page_free_batched(page);
-		type = page_zonenum(page);
-		free_unref_page_commit(page, pfn, &dsts[type]);
+		free_unref_page_commit(page, pfn);
 
 		/*
 		 * Guard against excessive IRQ disabled times when we get
 		 * a large list of pages to free.
 		 */
 		if (++batch_count == SWAP_CLUSTER_MAX) {
-			local_unlock_irqrestore(pa_lock, flags);
+			local_irq_restore(flags);
 			batch_count = 0;
-			local_lock_irqsave(pa_lock, flags);
+			local_irq_save(flags);
 		}
 	}
-	local_unlock_irqrestore(pa_lock, flags);
-
-	for (i = 0; i < __MAX_NR_ZONES; ) {
-		struct page *page;
-		struct zone *zone;
-
-		if (list_empty(&dsts[i])) {
-			i++;
-			continue;
-		}
-
-		page = list_first_entry(&dsts[i], struct page, lru);
-		zone = page_zone(page);
-
-		free_pcppages_bulk(zone, &dsts[i], true);
-	}
+	local_irq_restore(flags);
 }
 
 /*

--- kernel/time/hrtimer.c
+++ kernel/time/hrtimer.c
@@ -1982,38 +1982,6 @@ SYSCALL_DEFINE2(nanosleep_time32, struct old_timespec32 __user *, rqtp,
 }
 #endif
 
-#ifdef CONFIG_PREEMPT_RT
-/*
- * Sleep for 1 ms in hope whoever holds what we want will let it go.
- */
-void cpu_chill(void)
-{
-	unsigned int freeze_flag = current->flags & PF_NOFREEZE;
-	struct task_struct *self = current;
-	ktime_t chill_time;
-
-	raw_spin_lock_irq(&self->pi_lock);
-	self->saved_state = self->state;
-	__set_current_state_no_track(TASK_UNINTERRUPTIBLE);
-	raw_spin_unlock_irq(&self->pi_lock);
-
-	chill_time = ktime_set(0, NSEC_PER_MSEC);
-
-	current->flags |= PF_NOFREEZE;
-	sleeping_lock_inc();
-	schedule_hrtimeout(&chill_time, HRTIMER_MODE_REL_HARD);
-	sleeping_lock_dec();
-	if (!freeze_flag)
-		current->flags &= ~PF_NOFREEZE;
-
-	raw_spin_lock_irq(&self->pi_lock);
-	__set_current_state_no_track(self->saved_state);
-	self->saved_state = TASK_RUNNING;
-	raw_spin_unlock_irq(&self->pi_lock);
-}
-EXPORT_SYMBOL(cpu_chill);
-#endif
-
 /*
  * Functions related to boot-time initialization:
  */
